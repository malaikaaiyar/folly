---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { site } from "../site";

// Get all articles from the collection
const allArticles = await getCollection("articles");

// Sort articles by category, then by published status, then by title
const sortedArticles = allArticles.sort((a, b) => {
  // First sort by category
  const categoryComparison = a.data.category.localeCompare(b.data.category);
  if (categoryComparison !== 0) return categoryComparison;
  
  // Then sort by published status (published first)
  if (a.data.published && !b.data.published) return -1;
  if (!a.data.published && b.data.published) return 1;
  
  // Finally sort alphabetically by title
  return a.data.title.localeCompare(b.data.title);
});

// Group articles by category
const articlesByCategory = sortedArticles.reduce((acc, article) => {
  const category = article.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(article);
  return acc;
}, {});

// Get categories and sort them alphabetically
const categories = Object.keys(articlesByCategory).sort();
---

<Layout title={site.pages.articles.title}>
  <main>
    {categories.map((category) => (
      <div class="category-section">
        <h2 class="category-title">{category}</h2>
        <div class="articles-list">
          {articlesByCategory[category].map((article) => (
            <div class="article-item">
              <h3>
                {article.data.published ? (
                  <a href={`/articles/${article.slug}`}>
                    {article.data.title}
                  </a>
                ) : (
                  <span class="unpublished">
                    {article.data.title} 
                    <span class="lock-icon">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="3" y="11" width="18" height="11" rx="2" ry="2" fill="currentColor"></rect>
                        <path d="M7 11V7a5 5 0 0 1 10 0v4" fill="none"></path>
                      </svg>
                    </span>
                  </span>
                )}
              </h3>
              <p class="article-meta">{article.data.author}</p>
            </div>
          ))}
        </div>
      </div>
    ))}
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 2rem;
  }
  
  h1, h2, h3, h4, h5, h6 {
    letter-spacing: normal;
  }
  
  .category-section {
    margin-bottom: 1.5rem;
  }
  
  .category-title {
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
    padding-bottom: 0.2rem;
  }
  
  .articles-list {
    margin-top: 0.5rem;
  }
  
  .article-item {
    margin-bottom: 0.5rem;
  }
  
  .article-item h3 {
    margin-bottom: 0.1rem;
    font-size: 1.1rem;
  }
  
  .article-meta {
    font-style: italic;
    margin-top: 0.1rem;
    color: #666;
    font-size: 0.9rem;
  }
  
  .lock-icon {
    display: inline-flex;
    align-items: center;
    margin-left: 0.3rem;
    position: relative;
    top: 0.1em;
    color: #888;
  }
  
  .lock-icon svg {
    vertical-align: middle;
  }
  
  a {
    text-decoration: none;
    color: inherit;
  }
  
  a:hover {
    text-decoration: underline;
  }
  
  .unpublished {
    color: #888;
  }
</style> 